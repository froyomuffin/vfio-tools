#!/bin/bash

function startBridge {
    sudo sysctl -w net.ipv4.ip_forward=1
    sudo brctl addbr br0
    sudo ip addr add 10.11.12.1/24 broadcast 10.11.12.255 dev br0
    sudo brctl show
    sudo ip link set br0 up

    sudo ip tuntap add dev tap0 mode tap
    sudo ip link set tap0 up promisc on

    sudo brctl addif br0 tap0
    sudo dnsmasq --interface=br0 --bind-interfaces --dhcp-range=10.11.12.10,10.11.12.254
    sudo iptables -t nat -A POSTROUTING -s 10.11.12.1/24 -j MASQUERADE
}

function stopBridge {
    sudo ip link set dev br0 down
    sudo pkill dnsmasq
    sudo brctl delbr br0
    sudo ip tuntap del dev tap0 mode tap
    sudo dhclient $IF
    sudo iptables -t nat -D POSTROUTING -s 10.11.12.1/24 -j MASQUERADE
    exit 
}

function bindVfio {
    sudo modprobe vfio-pci

    DEVLIST=$@
    for DEV in $DEVLIST
    do
        vendor=$(cat /sys/bus/pci/devices/$DEV/vendor)
        device=$(cat /sys/bus/pci/devices/$DEV/device)
        if [ -e /sys/bus/pci/devices/$DEV/driver ]
        then
            echo $DEV | sudo tee -a /sys/bus/pci/devices/$DEV/driver/unbind
        fi  
        echo "$vendor $device" | sudo tee -a /sys/bus/pci/drivers/vfio-pci/new_id
    done

    sudo modprobe vfio-pci
}

function loadAudioConfigs {
    export $(cat $1 | grep -v '^#')
}

trap stopBridge INT
trap stopBridge SIGTERM
